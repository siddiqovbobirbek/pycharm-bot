##############  About Basket  ################
from loader import dp
from aiogram import types
from api import *
from keyboards.default.buttons import *

#############  See Basket  ###########
@dp.message_handler(text = ["üìä –ú–æ–∏ –∑–∞–∫–∞–∑—ã", "üõí –ö–æ—Ä–∑–∏–Ω–∞", "üìä Buyurtmalarim", "üõí Savat"])
async def basket_info(message:types.Message):
    language = language_info(message.from_user.id)
    shop = shop_info(telegram_id=message.from_user.id, language=language)
    if shop == []:
        text = "Sizning savatingiz bo'sh." if language=='uz' else "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞."
        await message.answer(text)
    else:
        text = ''
        money = " so'm" if language=='uz' else ' —Å—É–º'
        for i in shop[0]['items']:
            text += ("–¢–æ–≤–∞—Ä—ã:" if language=='ru' else "Mahsulotlar:") + str(shop[0]['all_shop']) + money + "\n"
            text += ("–î–æ—Å—Ç–∞–≤–∫–∞:" if language == 'ru' else "Yetkazib berish:") + str(17000) + money + "\n"
            text += ("–ò—Ç–æ–≥–æ:" if language == 'ru' else "Jami:") + str(shop[0]['all_shop'] + 17000) + money
            await message.answer(text, reply_markup=mybasket(language=language, datas=shop[0]['items']))


#############  Basket Query  #################
@dp.message_handler(basket_callback.filter())
async def query(call:types.CallbackQuery, callback_data:dict):
    data = callback_data
    await call.answer(cache_time=60)
    language = language_info(call.from_user.id)
    if data['action'] == 'order':
        shop = shop_info(telegram_id=call.from_user.id, language=language)
        if shop[0]['all_shop']<50000:
            if language == 'uz':
                await call.message.answer(f"<b>50 ming so'mdan kam buyurtmalar uchun yetkazib berish amal qilmaydi!</b>\n\n" "Buyurtmangizni filialimizdan olib ketishingiz mumkin.")
                await call.message.answer("Siz bilan bog'lanishimiz uchun telefon raqamingizni yuboring", reply_markup=getcontact(language))
            else:
                await call.message.answer(f"<b>–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –º–µ–Ω–µ–µ 50 —Ç—ã—Å—è—á —Å—É–º!</b>\n\n" "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Å–≤–æ–π –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–∏.")
                await call.message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏",  reply_markup=getcontact(language))
        else:
            if language == 'uz':
                await call.message.answer(f"Buyurtmani qabul qilish usulini tanlang:\n\n" "Yetkazib berish - restoranimizdan 5 km masofagacha yetkazib berish, pullik\n"
                                          "Olib ketish - restoranimizga kelib o'zingiz bilan olib ketasiz", reply_markup=gettype(language))

            else:
                await call.message.answer(
                    f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:\n\n" "–î–æ—Å—Ç–∞–≤–∫–∞ - –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ä–∞–¥–∏—É—Å–µ 5 –∫–º –æ—Ç –Ω–∞—à–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞, –ø–ª–∞—Ç–Ω–∞—è\n"
                     "–ó–∞–±–∏—Ä–∞–π ‚Äì –ø—Ä–∏—Ö–æ–¥–∏—à—å –≤ –Ω–∞—à —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∏ –±–µ—Ä–µ—à—å —Å —Å–æ–±–æ–π", reply_markup=gettype(language))

            await call.message.delete()
    if data['action'] == 'clear':
        text = "<i> Sizning savatingiz bo'sh. </i>" if language=='uz' else "<i> –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. </i>"
        await call.message.answer(text)
        await call.message.delete()
    if data['action'] == 'delete':
        product = data['product']
        delete_item(telegram_id=call.from_user.id,product=product)
        shop = shop_info(telegram_id=call.from_user.id, language=language)
        if shop[0]['items'] == []:
            await call.message.delete()
        else:
            text = ''
            money = " so'm" if language == 'uz' else ' —Å—É–º'
            for i in shop[0]['items']:
                text += ("–¢–æ–≤–∞—Ä—ã:" if language == 'ru' else "Mahsulotlar:") + str(shop[0]['all_shop']) + money + "\n"
                text += ("–î–æ—Å—Ç–∞–≤–∫–∞:" if language == 'ru' else "Yetkazib berish:") + str(17000) + money + "\n"
                text += ("–ò—Ç–æ–≥–æ:" if language == 'ru' else "Jami:") + str(shop[0]['all_shop'] + 17000) + money
                await call.message.edit_text(text, reply_markup=mybasket(language=language, datas=shop[0]['items']))
                if language == 'uz':
                    await call.message.answer("‚úÖ Bosh menyuga xush kelibsiz\n" \
                                         f"üçï Mazali pitsalar! Buyurtma berishni boshlaysizmi?", reply_markup=main_uz)
                else:
                    await call.message.answer("‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n" \
                                         f"üçï –í–∫—É—Å–Ω—ã–π –ø–∏—Ü—Ü—ã! –í—ã –Ω–∞—á–∏–Ω–∞–π—Ç–µ –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å?", reply_markup=main_ru)


##################  Delivery Type  ################
@dp.message_handler(text=["üö∂ Olib ketish", "üöó Yetkazish", "üö∂ –° —Å–æ–±–æ–π", "üöó –î–æ—Å—Ç–∞–≤–∫–∞"])
async def next(message:types.Message):
    language = language_info(message.from_user.id)
    if language == 'uz':
        await message.answer("Siz bilan bog'lanishimiz uchun telefon raqamingizni yuboring", reply_markup=getcontact(language))
    else:
        await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏", reply_markup=getcontact((language)))
